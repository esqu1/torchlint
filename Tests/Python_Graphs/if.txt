graph(%self : ClassType<IfTest>):
  %5 : None = prim::Constant()
  %1 : int = prim::Constant[value=3]() # if.py:5:19
  %2 : int = prim::Constant[value=1]() # if.py:5:21
  %26 : int = prim::Constant[value=0]() # if.py:8:12
  %4 : int[] = prim::ListConstruct(%1, %2)
  %x.1 : Tensor = aten::ones(%4, %5, %5, %5, %5) # if.py:5:8
  %11 : int[] = prim::ListConstruct(%1, %2)
  %16 : Tensor = aten::ones(%11, %5, %5, %5, %5) # if.py:6:10
  %y.1 : Tensor = aten::mul(%16, %1) # <string>:3:9
  %19 : int[] = prim::ListConstruct(%1, %2)
  %z.1 : Tensor = aten::zeros(%19, %5, %5, %5, %5) # if.py:7:8
  %27 : Tensor = aten::gt(%x.1, %26) # if.py:8:8
  %28 : Tensor = aten::all(%27) # if.py:8:8
  %29 : bool = aten::Bool(%28) # if.py:8:8
  %k : Tensor = prim::If(%29) # if.py:8:4
    block0():
      %k.1 : Tensor = aten::add(%x.1, %y.1, %2) # if.py:9:10
      -> (%k.1)
    block1():
      %k.2 : Tensor = aten::add(%x.1, %z.1, %2) # if.py:11:10
      -> (%k.2)
  return (%k)

